---
title: "H4"
format: html
editor: visual
---

## Quarto

Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see <https://quarto.org>.

## Running Code

When you click the **Render** button a document will be generated that includes both content and the output of embedded code. You can embed code like this:

```{r}
# install.packages("countrycode")
# install.packages("MASS")
```

You can add options to executable code like this

```{r}
library(tidyverse)
library(countrycode)
library(dplyr)
library(MASS)

```

The `echo: false` option disables the printing of code (only output is displayed).

```{r}

file_path <- file.choose()
load(file_path)

WVS = `WVS_Cross-National_Wave_7_v6_0` |> as.tibble()

```

```{r}
WVS$happiness = case_when(WVS$Q46>0 ~ 4-WVS$Q46,
                          TRUE ~ NA_integer_) # ALL ELSE IS NA
table(WVS$happiness)
```

```{r}
dim(WVS)
head(WVS,5)

```

```{r}
WVS$country = countrycode(sourcevar = WVS$B_COUNTRY_ALPHA, 
                          origin = "iso3c", 
                          destination = "country.name")


table(WVS$country , useNA = "always")
WVS = WVS |> filter(!is.na(country))
range(WVS$Q262 , na.rm = TRUE) 

WVS$age = ifelse(WVS$Q262>15, WVS$Q262, NA) 
hist(WVS$age)
```

```{r}
WVS |> 
  filter(!is.na(age)) |>
  ggplot(aes(country, age)) +
  geom_boxplot() + 
  coord_flip() +
  theme(axis.text.y = element_text(size = 5))  
```

```{r}
WVS |> 
  group_by(country) |>
  summarize(mean_happiness = mean(happiness, na.rm = TRUE)) |>
  ggplot() + 
  aes(country , mean_happiness) +
  geom_col()+
  coord_flip()+
  theme(axis.text.y = element_text(size = 5))  
```

```{r}
WVS |> 
  group_by(country) |>
  summarize(mean_happiness = mean(happiness, na.rm = TRUE)) |>
  arrange(mean_happiness) |>
  # the following command tells R what the order of the countries
  # as a categorical variable is
  mutate(country = factor(country, levels = country)) |>
  ggplot() + 
  aes(country , mean_happiness) +
  geom_col(fill = 'steelblue3')+
  coord_flip()+
  theme(axis.text.y = element_text(size = 5))  
```

```{r}
WVS$belief_in_god = ifelse(WVS$Q165>0, 2-WVS$Q165, NA)
WVS_country = WVS |> 
  group_by(country) |>
  summarize(cor_god_happ = cor(belief_in_god, happiness, use = "pairwise.complete.obs")) |>
  arrange(cor_god_happ) |>
  mutate(country = factor(country, levels = country))

WVS_country |>
  filter(!is.na(cor_god_happ)) |>
  ggplot(aes(country , cor_god_happ)) +
  geom_point() +
  geom_hline(yintercept = 0, linetype = "dashed", col='darkred') +
  coord_flip() +
  ggtitle('Where belief in God is positively correlated with happiness') +
  ylab('correlation between belief in God and happiness')+
  theme(axis.text.y = element_text(size = 5)) 
```

```{r}

WVS_working <-WVS %>%
  dplyr::select(
    country,
    belief_in_god,
    Q112,
    Q121,
    Q131,
    Q176,
    age,
    Q260,
    Q270,
    Q273,
    Q274,
    Q275,
    Q269,
    Q276,
    Q285,
    happiness,
    Q286
  )

WVS_working$corruption=ifelse(WVS_working$Q112>0,WVS_working$Q112,NA)

WVS_working$migration=ifelse(WVS_working$Q121>0,WVS_working$Q121,NA)

WVS_working$security=ifelse(WVS_working$Q131>0,5-WVS_working$Q131,NA)

WVS_working$moral=ifelse(WVS_working$Q176>0,11-WVS_working$Q176,NA)

WVS_working$citizen <- WVS_working$Q269 > 0 

WVS_working$citizen <- ifelse(WVS_working$citizen == 2, 1, 
                              ifelse(WVS_working$citizen == 1, 3, 
                                     ifelse(WVS_working$citizen == 3, 2,WVS_working$citizen)))



WVS_working$education=ifelse(WVS_working$Q276>0,WVS_working$Q276,NA)


WVS_working$wage_earner=ifelse(WVS_working$Q285>0,3-WVS_working$Q285,NA)

WVS_working$saving=ifelse(WVS_working$Q286>0,5-WVS_working$Q286,NA)



WVS_working <- WVS_working %>%
  mutate(gender = case_when(
    Q260 == 1 ~ "male",
    Q260 == 2 ~ "female",
    Q260 <= 0 ~ NA_character_  
  ))


WVS_working <- WVS_working %>%
  mutate(Marital = case_when(
    Q273 == 1 ~ "Married",
    Q273 == 2 ~ "Living together as married",
    Q273 == 3 ~ "Divorced",
    Q273 == 4 ~ "Separated",
    Q273 == 5 ~ "Widowed",
    Q273 == 6 ~ "Single",
    Q273 <= 0 ~ NA_character_
  ))


WVS_working$child=ifelse(WVS_working$Q274>0,WVS_working$Q274,NA)
WVS_working$edu=ifelse(WVS_working$Q275>0,WVS_working$Q275,NA)












```

```{r}
WVS_working<- na.omit(WVS_working)
model_ols<-lm(happiness~country+corruption+migration+security+moral+citizen+wage_earner+age+belief_in_god+saving+gender+Marital+child+edu,data=WVS_working)


summary(model_ols)
```

```{r}
WVS_working<- na.omit(WVS_working)



model_poly_1 <- lm(happiness ~ country+corruption + migration + security + moral + 
                     citizen+ wage_earner + poly(age, 1) + 
                     belief_in_god + saving++gender+Marital+child+edu, data = WVS_working)

model_poly_2 <- lm(happiness ~ country+corruption + migration + security + moral + 
                     citizen+ wage_earner + poly(age, 2) + 
                     belief_in_god + saving++gender+Marital+child+edu, data = WVS_working)

model_poly_3 <-lm(happiness ~ country+corruption + migration + security + moral + 
                     citizen+ wage_earner + poly(age, 3) + 
                     belief_in_god + saving++gender+Marital+child+edu, data = WVS_working)




summary(model_poly_1)
summary(model_poly_2)
summary(model_poly_3)
```

The degree 2 gives me the best fit

```{r}
WVS_working<- na.omit(WVS_working)
WVS_working$happiness_factor<-as.factor(WVS_working$happiness)

levels(WVS_working$happiness_factor)

order_model_poly_1 <- polr(happiness_factor ~ country+corruption + migration + security + moral + 
                     citizen+ wage_earner + poly(age, 1) + 
                     belief_in_god + saving++gender+Marital+child+edu, data = WVS_working)


summary(order_model_poly_1)


order_model_poly_2 <- polr(happiness_factor ~ country+corruption + migration + security + moral + 
                     citizen+ wage_earner + poly(age, 3) + 
                     belief_in_god + saving++gender+Marital+child+edu, data = WVS_working)



summary(order_model_poly_2)


order_model_poly_3 <-polr(happiness_factor ~ country+corruption + migration + security + moral + 
                     citizen+ wage_earner + poly(age, 3) + 
                     belief_in_god + saving++gender+Marital+child+edu, data = WVS_working)




summary(order_model_poly_3)

```

```{r}






ages <- 18:70
countries <- c("Uzbekistan", "Zimbabwe", "Kyrgyzstan")


age <- rep(ages, length(countries))


country <- rep(countries, each = length(ages))


corruption <- 1       
migration <- 1       
security <- 1         
moral <- 2           
citizen <- 1          
wage_earner <- 1      
belief_in_god <- 1    


education <- 3       
saving <- 2        
gender="male"
Marital="Single"
child=6
edu=7

fake_data <- data.frame(
  age = age,
  country = country,
  corruption = corruption,
  migration = migration,
  security = security,
  moral = moral,
  citizen = citizen,
  wage_earner = wage_earner,
  belief_in_god = belief_in_god,
  education = education,
  saving = saving,
  gender=gender,
  Marital=Marital,
  child=child,
  edu=edu
  
  )


fake_data$p1 <- predict(model_poly_1, newdata = fake_data)
fake_data$p2<- predict(model_poly_2, newdata = fake_data)
fake_data$p3<- predict(model_poly_3, newdata = fake_data)

fake_data$p_order<-predict(order_model_poly_1, newdata = fake_data)
fake_data$p_order2<-predict(order_model_poly_2, newdata = fake_data)
fake_data$p_order3<-predict(order_model_poly_3, newdata = fake_data)




```

```{r}
#this part is the require plot for HW other plot is for fun 


fake_data %>% 
  ggplot(aes(x = age, y = p_order, color =country)) + 
  geom_point() +  
  facet_wrap(~country)+
  theme_minimal() +
  theme(axis.text.y = element_text(size = 5)) +
  labs(x = "Age", y = "Mean of p1", title = "Average Model by Age", color = "Country")


```

```{r}
p1_model <- fake_data %>%
  group_by(country, age) %>%
  summarise(mean_p1 = mean(p1))
  
p1_model$country <- factor(p1_model$country)

p1_model %>% 
  ggplot(aes(x = age, y = mean_p1, color =country)) + 
  geom_line() +  
  theme_minimal() +
  theme(axis.text.y = element_text(size = 5)) +
  labs(x = "Age", y = "Mean of p1", title = "Average Model by Age", color = "Country")

```

```{r}
p2_model <- fake_data %>%
  group_by(country, age) %>%
  summarise(mean_p2 = mean(p2))
  
p2_model$country <- factor(p2_model$country)

p2_model %>% 
  ggplot(aes(x = age, y = mean_p2, color =country)) + 
  geom_line() +  
  theme_minimal() +
  theme(axis.text.y = element_text(size = 5)) +
  labs(x = "Age", y = "Mean of p1", title = "Average Model by Age", color = "Country")
```

```{r}

#model with world bank data

WB_data <- read.csv("C:/Users/Frank/Desktop/H4/P_Data_Extract_From_World_Development_Indicators/fbb54597-0836-45b0-b44a-e3522428acd5_Series - Metadata.csv")

WB_working <- WB_data %>% dplyr::select(Country.Name, Series.Name, Year)

WB_working<-WB_working%>%
  pivot_wider(names_from =Series.Name, values_from =Year)


bonus<-WVS_working%>%inner_join(WB_working,by=join_by(country==Country.Name))

bonus$GDP_per_capital=as.numeric(bonus$`GDP per capita (current US$)`)



bonus<- na.omit(bonus)








aggregated_data <- bonus %>%
  group_by(country) %>%
  summarize(
    happiness_avg = mean(happiness, na.rm = TRUE),
    corruption_avg = mean(corruption, na.rm = TRUE),
    migration_avg = mean(migration, na.rm = TRUE),
    GDP_per_capital = first(GDP_per_capital) 
  )


model_aggregated <- lm(happiness_avg ~ corruption_avg + migration_avg + GDP_per_capital, data = aggregated_data)

summary(model_aggregated)










```

From the model I do not find the close relationship between GDP per capital with happiness
